C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Richard
                    -\SimplicityStudio\v4_workspace\EFM8BB3_RainbowBlinky_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Richard\Simplicity
                    -Studio\v4_workspace\EFM8BB3_RainbowBlinky_2\inc;C:\Users\Richard\SimplicityStudio\v4_workspace\EFM8BB3_RainbowBlinky_2\i
                    -nc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.1//kits/common/drivers/efm8_memory_lcd/inc;C:/Sili
                    -conLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.1//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/
                    -SimplicityStudio/v4/developer/sdks/8051/v4.0.1//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/Simplicity
                    -Studio/v4/developer/sdks/8051/v4.0.1//kits/common/drivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio/v4/developer/sdk
                    -s/8051/v4.0.1//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.1//kits/EFM8BB3_SLSTK2022A/co
                    -nfig;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.1//kits/common/drivers/efm8_rgb_led;C:/SiliconLabs/Simp
                    -licityStudio/v4/developer/sdks/8051/v4.0.1//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8
                    -051/v4.0.1//Device/EFM8BB3/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.1//Device/EFM8BB3/peripheral_
                    -driver/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          //=========================================================
   3          // src/InitDevice.c: generated by Hardware Configurator
   4          //
   5          // This file will be regenerated when saving a document.
   6          // leave the sections inside the "$[...]" comment tags alone
   7          // or they will be overwritten!
   8          //=========================================================
   9          
  10          // USER INCLUDES
  11          #include <SI_EFM8BB3_Register_Enums.h>
  12          #include "InitDevice.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              CLOCK_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_3_enter_DefaultMode_from_RESET();
  35   1              TIMER01_0_enter_DefaultMode_from_RESET();
  36   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  37   1              SPI_0_enter_DefaultMode_from_RESET();
  38   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  39   1              // Restore the SFRPAGE
  40   1              SFRPAGE = SFRPAGE_save;
  41   1              // [Config Calls]$
  42   1      
  43   1      }
  44          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 2   

  45          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  46   1              // $[WDTCN - Watchdog Timer Control]
  47   1              SFRPAGE = 0x00;
  48   1              //Disable Watchdog with key sequence
  49   1              WDTCN = 0xDE; //First key
  50   1              WDTCN = 0xAD; //Second key
  51   1              // [WDTCN - Watchdog Timer Control]$
  52   1      
  53   1      }
  54          
  55          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
  56   1              // $[HFOSC1 Setup]
  57   1              // [HFOSC1 Setup]$
  58   1      
  59   1              // $[CLKSEL - Clock Select]
  60   1              /*
  61   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
  62   1               //     High Frequency Oscillator 0.)
  63   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
  64   1               //     selected clock source divided by 1.)
  65   1               */
  66   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  67   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
  68   1                      ;
  69   1              // [CLKSEL - Clock Select]$
  70   1      
  71   1      }
  72          
  73          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
  74   1              // $[SPI0CKR - SPI0 Clock Rate]
  75   1              /*
  76   1               // SPI0CKR (SPI0 Clock Rate) = 0x0B
  77   1               */
  78   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
  79   1              // [SPI0CKR - SPI0 Clock Rate]$
  80   1      
  81   1              // $[SPI0CFG - SPI0 Configuration]
  82   1              /*
  83   1               // MSTEN (Master Mode Enable) = MASTER_ENABLED (Enable master mode.
  84   1               //     Operate as a master.)
  85   1               */
  86   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
  87   1              // [SPI0CFG - SPI0 Configuration]$
  88   1      
  89   1              // $[SPI0PCF - SPI0 Pin Configuration]
  90   1              // [SPI0PCF - SPI0 Pin Configuration]$
  91   1      
  92   1              // $[SPI0CN0 - SPI0 Control]
  93   1              /*
  94   1               // SPIEN (SPI0 Enable) = ENABLED (Enable the SPI module.)
  95   1               // NSSMD (Slave Select Mode) = 3_WIRE (3-Wire Slave or 3-Wire Master
  96   1               //     Mode. NSS signal is not routed to a port pin.)
  97   1               */
  98   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
  99   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 100   1              // [SPI0CN0 - SPI0 Control]$
 101   1      
 102   1      }
 103          
 104          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 105   1              // $[EIE1 - Extended Interrupt Enable 1]
 106   1              /*
 107   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 3   

 108   1               //     ADC0 Conversion Complete interrupt.)
 109   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 110   1               //     ADC0 Window Comparison interrupt.)
 111   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 112   1               //     interrupts.)
 113   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 114   1               //     interrupts.)
 115   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 116   1               //     requests generated by a Port Match.)
 117   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 118   1               //     (Disable all PCA0 interrupts.)
 119   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 120   1               //     interrupts.)
 121   1               // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
 122   1               //     generated by the TF3L or TF3H flags.)
 123   1               */
 124   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 125   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 126   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 127   1              // [EIE1 - Extended Interrupt Enable 1]$
 128   1      
 129   1              // $[EIE2 - Extended Interrupt Enable 2]
 130   1              // [EIE2 - Extended Interrupt Enable 2]$
 131   1      
 132   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 133   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 134   1      
 135   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 136   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 137   1      
 138   1              // $[EIP2 - Extended Interrupt Priority 2]
 139   1              // [EIP2 - Extended Interrupt Priority 2]$
 140   1      
 141   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 142   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 143   1      
 144   1              // $[IE - Interrupt Enable]
 145   1              /*
 146   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 147   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 148   1               //     interrupt 0.)
 149   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 150   1               //     interrupt 1.)
 151   1               // ESPI0 (SPI0 Interrupt Enable) = ENABLED (Enable interrupt requests
 152   1               //     generated by SPI0.)
 153   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 154   1               //     interrupt.)
 155   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 156   1               //     interrupt.)
 157   1               // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
 158   1               //     generated by the TF2L or TF2H flags.)
 159   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 160   1               */
 161   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 162   1                              | IE_ESPI0__ENABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 163   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 164   1              // [IE - Interrupt Enable]$
 165   1      
 166   1              // $[IP - Interrupt Priority]
 167   1              // [IP - Interrupt Priority]$
 168   1      
 169   1              // $[IPH - Interrupt Priority High]
 170   1              // [IPH - Interrupt Priority High]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 4   

 171   1      
 172   1      }
 173          
 174          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 175   1              // $[XBR2 - Port I/O Crossbar 2]
 176   1              /*
 177   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 178   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 179   1               //     mode).)
 180   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 181   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 182   1               //     pin.)
 183   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 184   1               //     at Port pin.)
 185   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 186   1               //     at Port pin.)
 187   1               */
 188   1              SFRPAGE = 0x00;
 189   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 190   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 191   1                              | XBR2_URT1CTSE__DISABLED;
 192   1              // [XBR2 - Port I/O Crossbar 2]$
 193   1      
 194   1              // $[PRTDRV - Port Drive Strength]
 195   1              // [PRTDRV - Port Drive Strength]$
 196   1      
 197   1              // $[XBR0 - Port I/O Crossbar 0]
 198   1              /*
 199   1               // URT0E (UART0 I/O Enable) = DISABLED (UART0 I/O unavailable at Port
 200   1               //     pin.)
 201   1               // SPI0E (SPI I/O Enable) = ENABLED (SPI I/O routed to Port pins. The SPI
 202   1               //     can be assigned either 3 or 4 GPIO pins.)
 203   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 204   1               //     pins.)
 205   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 206   1               //     pin.)
 207   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 208   1               //     (Asynchronous CP0 unavailable at Port pin.)
 209   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 210   1               //     pin.)
 211   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 212   1               //     (Asynchronous CP1 unavailable at Port pin.)
 213   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 214   1               //     pin.)
 215   1               */
 216   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 217   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 218   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 219   1              // [XBR0 - Port I/O Crossbar 0]$
 220   1      
 221   1              // $[XBR1 - Port I/O Crossbar 1]
 222   1              // [XBR1 - Port I/O Crossbar 1]$
 223   1      
 224   1      }
 225          
 226          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 227   1              // $[Timer Initialization]
 228   1              // Save Timer Configuration
 229   1              uint8_t TMR3CN0_TR3_save;
 230   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 231   1              // Stop Timer
 232   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 233   1              // [Timer Initialization]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 5   

 234   1      
 235   1              // $[TMR3CN1 - Timer 3 Control 1]
 236   1              // [TMR3CN1 - Timer 3 Control 1]$
 237   1      
 238   1              // $[TMR3CN0 - Timer 3 Control]
 239   1              // [TMR3CN0 - Timer 3 Control]$
 240   1      
 241   1              // $[TMR3H - Timer 3 High Byte]
 242   1              /*
 243   1               // TMR3H (Timer 3 High Byte) = 0xF8
 244   1               */
 245   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 246   1              // [TMR3H - Timer 3 High Byte]$
 247   1      
 248   1              // $[TMR3L - Timer 3 Low Byte]
 249   1              /*
 250   1               // TMR3L (Timer 3 Low Byte) = 0x06
 251   1               */
 252   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 253   1              // [TMR3L - Timer 3 Low Byte]$
 254   1      
 255   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 256   1              /*
 257   1               // TMR3RLH (Timer 3 Reload High Byte) = 0xF8
 258   1               */
 259   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 260   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 261   1      
 262   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 263   1              /*
 264   1               // TMR3RLL (Timer 3 Reload Low Byte) = 0x06
 265   1               */
 266   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 267   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 268   1      
 269   1              // $[TMR3CN0]
 270   1              /*
 271   1               // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 272   1               */
 273   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 274   1              // [TMR3CN0]$
 275   1      
 276   1              // $[Timer Restoration]
 277   1              // Restore Timer Configuration
 278   1              TMR3CN0 |= TMR3CN0_TR3_save;
 279   1              // [Timer Restoration]$
 280   1      
 281   1      }
 282          
 283          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 284   1              // $[Timer Initialization]
 285   1              //Save Timer Configuration
 286   1              TCON_TR0=0;
 287   1              TH0 = 00111000;
 288   1              TL0 = 10011110;
 289   1              //Setting timer low byte and high byte in order for timer 0 to overflow at 14494 which is 10hz  which is 
             -100ms,
 290   1              //once this interrupt occurs we want the flag to be flagged and then update the screen
 291   1              TCON_TR0=1;
 292   1      
 293   1      }
 294          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 295   1              // $[CKCON0 - Clock Control 0]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 6   

 296   1              CKCON0 = 0x2  | 0 | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 297   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 298   1                              | CKCON0_T1M__SYSCLK;
 299   1      // here we are setting Timer 2 to use a prescaled sysclock. It is scaled down by 48
 300   1      //      effectivly making it run at .510416 MHz JP
 301   1      
 302   1      //Enabiling timer 0 interrupt JP
 303   1              TMOD = 0x1 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 304   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 305   1              // setting Timer one to mode one; aka 16 bits... JP
 306   1              TCON_TR0=1;
 307   1      
 308   1      }
 309          
 310          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 311   1              // $[P0 - Port 0 Pin Latch]
 312   1              // [P0 - Port 0 Pin Latch]$
 313   1      
 314   1              // $[P0MDOUT - Port 0 Output Mode]
 315   1              /*
 316   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
 317   1               //     drain.)
 318   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
 319   1               //     drain.)
 320   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
 321   1               //     drain.)
 322   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
 323   1               //     drain.)
 324   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
 325   1               //     drain.)
 326   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 327   1               //     drain.)
 328   1               // B6 (Port 0 Bit 6 Output Mode) = PUSH_PULL (P0.6 output is push-pull.)
 329   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 330   1               //     drain.)
 331   1               */
 332   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 333   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 334   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 335   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 336   1              // [P0MDOUT - Port 0 Output Mode]$
 337   1      
 338   1              // $[P0MDIN - Port 0 Input Mode]
 339   1              // [P0MDIN - Port 0 Input Mode]$
 340   1      
 341   1              // $[P0SKIP - Port 0 Skip]
 342   1              /*
 343   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 344   1               //     crossbar.)
 345   1               // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
 346   1               //     crossbar.)
 347   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 348   1               //     crossbar.)
 349   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 350   1               //     crossbar.)
 351   1               // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
 352   1               //     crossbar.)
 353   1               // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
 354   1               //     crossbar.)
 355   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 356   1               //     crossbar.)
 357   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 358   1               //     crossbar.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 7   

 359   1               */
 360   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 361   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 362   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 363   1              // [P0SKIP - Port 0 Skip]$
 364   1      
 365   1              // $[P0MASK - Port 0 Mask]
 366   1              /*
 367   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 368   1               //     ignored and will not cause a port mismatch event.)
 369   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 370   1               //     ignored and will not cause a port mismatch event.)
 371   1               // B2 (Port 0 Bit 2 Mask Value) = COMPARED (P0.2 pin logic value is
 372   1               //     compared to P0MAT.2.)
 373   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 374   1               //     ignored and will not cause a port mismatch event.)
 375   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 376   1               //     ignored and will not cause a port mismatch event.)
 377   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 378   1               //     ignored and will not cause a port mismatch event.)
 379   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 380   1               //     ignored and will not cause a port mismatch event.)
 381   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 382   1               //     ignored and will not cause a port mismatch event.)
 383   1               */
 384   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 385   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 386   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 387   1              // [P0MASK - Port 0 Mask]$
 388   1      
 389   1              // $[P0MAT - Port 0 Match]
 390   1              // [P0MAT - Port 0 Match]$
 391   1      
 392   1      }
 393          
 394          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 395   1              // $[P1 - Port 1 Pin Latch]
 396   1              // [P1 - Port 1 Pin Latch]$
 397   1      
 398   1              // $[P1MDOUT - Port 1 Output Mode]
 399   1              /*
 400   1               // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 401   1               // B1 (Port 1 Bit 1 Output Mode) = PUSH_PULL (P1.1 output is push-pull.)
 402   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 403   1               //     drain.)
 404   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 405   1               //     drain.)
 406   1               // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 407   1               //     drain.)
 408   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 409   1               //     drain.)
 410   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 411   1               //     drain.)
 412   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 413   1               //     drain.)
 414   1               */
 415   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 416   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 417   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 418   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 419   1              // [P1MDOUT - Port 1 Output Mode]$
 420   1      
 421   1              // $[P1MDIN - Port 1 Input Mode]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 8   

 422   1              // [P1MDIN - Port 1 Input Mode]$
 423   1      
 424   1              // $[P1SKIP - Port 1 Skip]
 425   1              /*
 426   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 427   1               //     crossbar.)
 428   1               // B1 (Port 1 Bit 1 Skip) = SKIPPED (P1.1 pin is skipped by the
 429   1               //     crossbar.)
 430   1               // B2 (Port 1 Bit 2 Skip) = SKIPPED (P1.2 pin is skipped by the
 431   1               //     crossbar.)
 432   1               // B3 (Port 1 Bit 3 Skip) = SKIPPED (P1.3 pin is skipped by the
 433   1               //     crossbar.)
 434   1               // B4 (Port 1 Bit 4 Skip) = SKIPPED (P1.4 pin is skipped by the
 435   1               //     crossbar.)
 436   1               // B5 (Port 1 Bit 5 Skip) = SKIPPED (P1.5 pin is skipped by the
 437   1               //     crossbar.)
 438   1               // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 439   1               //     crossbar.)
 440   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 441   1               //     crossbar.)
 442   1               */
 443   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 444   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 445   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 446   1              // [P1SKIP - Port 1 Skip]$
 447   1      
 448   1              // $[P1MASK - Port 1 Mask]
 449   1              // [P1MASK - Port 1 Mask]$
 450   1      
 451   1              // $[P1MAT - Port 1 Match]
 452   1              // [P1MAT - Port 1 Match]$
 453   1      
 454   1      }
 455          
 456          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 457   1              // $[P2 - Port 2 Pin Latch]
 458   1              // [P2 - Port 2 Pin Latch]$
 459   1      
 460   1              // $[P2MDOUT - Port 2 Output Mode]
 461   1              /*
 462   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 463   1               //     drain.)
 464   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 465   1               //     drain.)
 466   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 467   1               //     drain.)
 468   1               // B3 (Port 2 Bit 3 Output Mode) = OPEN_DRAIN (P2.3 output is open-
 469   1               //     drain.)
 470   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 471   1               //     drain.)
 472   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 473   1               //     drain.)
 474   1               // B6 (Port 2 Bit 6 Output Mode) = PUSH_PULL (P2.6 output is push-pull.)
 475   1               */
 476   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 477   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 478   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 479   1                              | P2MDOUT_B6__PUSH_PULL;
 480   1              // [P2MDOUT - Port 2 Output Mode]$
 481   1      
 482   1              // $[P2MDIN - Port 2 Input Mode]
 483   1              // [P2MDIN - Port 2 Input Mode]$
 484   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/14/2017 22:22:51 PAGE 9   

 485   1              // $[P2SKIP - Port 2 Skip]
 486   1              // [P2SKIP - Port 2 Skip]$
 487   1      
 488   1              // $[P2MASK - Port 2 Mask]
 489   1              // [P2MASK - Port 2 Mask]$
 490   1      
 491   1              // $[P2MAT - Port 2 Match]
 492   1              // [P2MAT - Port 2 Match]$
 493   1      
 494   1      }
 495          
 496          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 497   1              // $[P3 - Port 3 Pin Latch]
 498   1              // [P3 - Port 3 Pin Latch]$
 499   1      
 500   1              // $[P3MDOUT - Port 3 Output Mode]
 501   1              /*
 502   1               // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
 503   1               //     drain.)
 504   1               // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
 505   1               //     drain.)
 506   1               // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
 507   1               //     drain.)
 508   1               // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
 509   1               //     drain.)
 510   1               // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
 511   1               // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
 512   1               //     drain.)
 513   1               */
 514   1              SFRPAGE = 0x20;
 515   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 516   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 517   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 518   1              // [P3MDOUT - Port 3 Output Mode]$
 519   1      
 520   1              // $[P3MDIN - Port 3 Input Mode]
 521   1              // [P3MDIN - Port 3 Input Mode]$
 522   1      
 523   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
